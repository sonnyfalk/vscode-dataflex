{
  "scopeName": "source.dataflex",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#comments"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.structure.dataflex",
          "match": "(?i)\\b(Begin|Begin_Row|Begin_Transaction|Case Begin|Cd_Popup_Object|Class|Deferred_View|DFBeginHeader|DFCreate_Menu|Enum_List|Enumeration_List|For|For_All|Function|Object|Composite|Procedure|Procedure_Section|Repeat|Struct|While|#HEADER|End|Loop|Until|End_Row|End_Transaction|Case End|Cd_End_Object|End_Class|DFEndHeader|End_Pull_Down|End_Menu|End_Enum_List|End_Enumeration_List|End_For_All|End_Function|End_Object|End_Composite|End_Procedure|End_Struct|#ENDHEADER)\\b"
        },
        {
          "name": "keyword.control.commands.dataflex",
          "match": "(?i)\\b(Abort|Abort_Transaction|Activate_View|Add|Address|All|AmbiguousFunctions|Append|Append_Output|Attach|Between|BigInt|Boolean|Break|Broadcast|Broadcast_Focus|by|ByRef|Call_Driver|CallStackDump|Case|channel|Char|Clear|Close|Close_Input|Close_Output|CompilerWarnings|CompilerLevelWarning|Constrain|Constrained_Clear|Constrained_Find|Constraint_Set|Constraint_Validate|Copy_db|Copy_Records|CopyFile|Create_Field|Create_Index|Currency|Date|DateTime|Decimal|Declare_Datafile|Decrement|Define|Delegate|Delete|Delete_db|Delete_Field|Delete_Index|Do|DFFont|DFFontSize|DFHeaderFrame|DFHeaderLineCheck|DFHeaderMargin|DFHeaderPos|DFHeaderWrap|DFLineCheck|DFTopMargin|DFBottomMargin|DFLeftMargin|DFRightMargin|DFWrite|DFWriteBMP|DFWriteEllip|DFWriteLine|DFWriteLn|DFWriteLnPos|DFWritePos|DFWriteRect|DFWriteXYLine|Direct_Input|Direct_Output|DWord|Diskfree|Else|Entry_Item|EraseFile|Error|External_Function|False|Field|Field_Map|File_Exist|File_Field|Fill_Field|Find|Float|Flush_Output|for|Forward|Found|from|Function_Return|General|Get|Get_Argument_Size|Get_Attribute|Get_Channel_Position|Get_Channel_Size|Get_Current_Directory|Get_Current_Input_Channel|Get_Current_Output_Channel|Get_Current_User_Count|Get_Date_Attribute|Get_Directory|Get_Environment|Get_FieldNumber|Get_Field_Value|Get_FileNumber|Get_File_Mod_Time|Get_File_Path|Get_Icon_Count|Get_Licensed_Max_Users|Get_StrictEval|Get_Transaction_Retry|Get_Windows_Directory|GetDskInfo|Global|Global_Variable|Goto|Handle|If|IfExp|IfLine|Import_Class_Protocol|Include_Resource|Include_Text|Increment|Index|Integer|Item|Load_Def|Load_Driver|Lock|Login|Logout|Longptr|ULongptr|Make_Directory|Make_File|Make_Temp_File|Move|NewRecord|Nothing|Number|On_Item|On_Key|Open|Output|Output_Aux_File|Output_Wrap|Overloaded|Playwave|Pointer|Print|Print_Wrap|Procedure_Return|Property|Read|Read_Block|Read_Hex|Readln|Real|Recursive|Register_Function|Register_Object|Register_Procedure|Registration|Relate|Remove_Directory|RenameFile|Report_Breaks|Reread|Returns|RowID|Runprogram|Save|SaveRecord|Self|Send|SeqEof|SeqEol|Set|Set_Argument_Size|Set_Attribute|Set_Channel_Position|Set_Date_Attribute|Set_Directory|Set_Field_Value|Set_File_Mod_Time|Set_Relate|Set_StrictEval|Set_Transaction_Retry|Short|Show|Showln|Sleep|Sort|Start_UI|String|Structure_Abort|Structure_Copy|Structure_End|Structure_Start|Subtract|Sysdate|Time|TimeSpan|True|UBigInt|UChar|UInteger|Unicode|Unload_Driver|Unlock|Use|Include|UShort|Variant|Valid_Drive|Vconstrain|Version_Information|Vfind|Wait|WebGet|WebPublishFunction|WebPublishProcedure|WebSet|WebSetResponsive|WebRegisterPath|Write|Write_Hex|Writeln|WString|ZeroFile|ZeroString|#ENDCOMMAND|#Replace|#Include|#CHKSUB|#IF|#IFSUB|#IFDEF|#IFNDEF|#ELSE|#ENDIF|#Warning)\\b"
        },
        {
          "name": "keyword.control.preposition.dataflex",
          "match": "(?i)\\b(to|of|is a|is an)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.triplequoted.multline.dataflex",
          "begin": "\"\"\"",
          "end": "\"\"\""
        },
        {
          "name": "string.quoted.double.dataflex",
          "match": "\".*\""
        },
        {
          "name": "string.quoted.single.dataflex",
          "match": "'.*'"
        },
        {
          "name": "string.quoted.multline.dataflex",
          "begin": "@\"",
          "end": "\""
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.dataflex",
          "match": "[0-9]+(\\.[0-9]+)?"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.dataflex",
          "match": "(//).*$"
        },
        {
          "name": "comment.block.dataflex",
          "match": "/\\*\\*/"
        },
        {
          "name": "comment.block.dataflex",
          "begin": "/\\*(?!\\*)",
          "end": "\\*/"
        }
      ]
    }
  }
}
